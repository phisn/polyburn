import path from 'path';
import * as fs from 'fs';

// script to fix rust bindings generated by wasm-bindgen because they are incompatible with cloudflare workers. 
// see: https://developers.cloudflare.com/workers/runtime-apis/webassembly/rust/#javascript-plumbing-wasm-bindgen

const scriptHead = "//! modified by custom application postprocess !"

function transformScript() {
    const scriptBg = path.resolve('./node_modules/@dimforge/rapier2d/rapier_wasm2d_bg.js')
    const linesScriptBg = fs.readFileSync(scriptBg, 'utf8').split('\n')

    // line 0: import * as wasm from './rapier_wasm2d_bg.wasm';
    const [head, ...withoutWasmImport] = linesScriptBg

    if (head === scriptHead) {
        return
    }

    const withCustomWasm = [
        scriptHead,
        "let wasm",
        "export function __setWasm(newWasm) {",
        "    wasm = newWasm;",
        "}",
        ...withoutWasmImport,
    ]

    fs.writeFileSync(scriptBg, withCustomWasm.join('\n'))
}

function transformScriptTypes() {
    const scriptTypes = path.resolve('./node_modules/@dimforge/rapier2d/rapier_wasm2d_bg.d.ts')

    if (fs.existsSync(scriptTypes)) {
        return
    }

    const lines = [
        scriptHead,
        "export function __setWasm(newWasm: WebAssembly.Exports)"
    ]

    fs.writeFileSync(scriptTypes, lines.join('\n'))
}

transformScript()
transformScriptTypes()
